group 'com.incarcloud'
version '2.0'

allprojects {//公共配置
    apply plugin: 'java'
    apply plugin: 'maven'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8


    if (isReleaseBuild()) {
        println project.name + '******************RELEASE BUILD******************'
    } else {
        println project.name + '******************SNAPSHOT BUILD******************'
    }


    repositories {
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        maven {
            url MAVEN_REPO_MIRROR_URL
            credentials {
                username = NEXUS_USERNAME
                password = NEXUS_PASSWORD
            }
        }
    }


    buildscript {
        repositories {
            maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
            maven {
                url MAVEN_REPO_MIRROR_URL
                credentials {
                    username = NEXUS_USERNAME
                    password = NEXUS_PASSWORD
                }
            }
        }

        dependencies {
        }
    }



    compileJava {
        options.encoding = "utf-8"
        options.compilerArgs << "-Xlint:unchecked"
    }

    compileTestJava {
        options.encoding = "utf-8"
        options.compilerArgs << "-Xlint:unchecked"
    }

    test{
        testLogging {
            events "passed", "skipped", "failed"
            showStandardStreams = true
        }
    }

    //打包源代码
    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }


    artifacts {
        archives sourcesJar
    }


    //如果希望gradle install，安装到.m2本地仓库，参考下面的内容
    install {
        repositories.mavenInstaller {
            pom.version = "$project.version"
            pom.artifactId = "$project.name"
            pom.groupId = "$project.group"
        }
    }

    //上传到nexus
    uploadArchives {
        repositories {
            mavenDeployer {
                repository(
                        url: "${MAVEN_REPO_RELEASE_URL}") {
                    authentication(userName: NEXUS_USERNAME, password: NEXUS_PASSWORD)
                }
                snapshotRepository(
                        url: "${MAVEN_REPO_SNAPSHOT_URL}") {
                    authentication(userName: NEXUS_USERNAME, password: NEXUS_PASSWORD)
                }
                pom.project{
                    name = '$project.name'
                }

            }
        }
    }


    defaultTasks "assemble"

}





dependencies {
    compile ("com.incarcloud:rooster-shared-all:2.0")

    compile("org.springframework:spring-beans:4.3.12.RELEASE")
    compile("org.springframework:spring-context:4.3.12.RELEASE")

    compile("com.google.code.gson:gson:2.2.2")
    compile("io.netty:netty-all:4.1.+")
    compile("org.slf4j:slf4j-api:1.7.+")

//    compile project("rooster-shared")
    testCompile("junit:junit:4.+")
    testRuntime("org.apache.logging.log4j:log4j-slf4j-impl:2.8.+")
    testRuntime("org.apache.logging.log4j:log4j-core:2.8.+")
}


def isReleaseBuild() {
    return project.version.contains("SNAPSHOT") == false
}

